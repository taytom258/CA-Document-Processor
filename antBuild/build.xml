<?xml version="1.0" ?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="CA-Document-Processor" default="build">
<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
	
	<tstamp prefix="time" />

	<!-- Public property files -->
	<property file="build.properties" prefix="build" />
	<property file="environment.properties" prefix="environment" />
	
	<!-- Private property files -->
	<property file="private.properties" prefix="private" />
	
	<!-- Targets -->
	<target name="increment_build_number">
		<propertyfile file="build.properties">
			<entry key="build_number" type="int" operation="+" default="1" />
		</propertyfile>
	</target>
	
	<target name="replace_tokens">
		<replace dir="${environment.base_location}/temp/common" token="@VERSION@" value="${build.app_version}" />
		<replace dir="${environment.base_location}/temp/common" token="@FINGERPRINT@" value="${private.fingerprint_signature}" />
		<replace dir="${environment.base_location}/temp/common/taytom258/lib" token="@BUILD_NUMBER@" value="${build.build_number}" />
	</target>
	
	<target name="prep">
		<mkdir dir="${environment.base_location}/temp/compile" />
		<mkdir dir="${environment.base_location}/temp/common" />
		<copy todir="${environment.base_location}/temp/common">
			<fileset dir="${environment.source_location}/common"/>
			</copy>
		<copy todir="${environment.base_location}/temp/compile/taytom258/lib/resources">
			<fileset dir="${environment.source_location}/common/taytom258/lib/resources"/>
			</copy>
	</target>
	
	<target name="compile">
		<javac fork="yes" executable="C:\Program Files\Java\jdk1.7.0_65\bin\javac.exe" nowarn="on" encoding="UTF-8" sourcepath="" srcdir="${environment.base_location}/temp/common" includeantruntime = "false"
			destdir="${environment.base_location}/temp/compile" >
		<include name="**/*.java"/>
		</javac>
	</target>
	
	<target name="clean">
		<delete dir="${environment.base_location}/temp" />
		<delete dir="${environment.source_location}/antBuild/lib" />
		<delete file="MANIFEST.MF" quiet="true" />
	</target>
	
	<target name="jenkinsClean">
		<delete>
			<fileset dir="${environment.build_location}" includes="**/*.jar"/>
		</delete>
	</target>
	
	<target name="sign_jar">
		<signjar jar="${environment.release_location}/${build.app_name}/${build.app_version}/${build.app_name}-${build.app_version}-${build.build_number}.jar"
			keystore="${private.keystore_location}" alias="${private.keystore_user_alias}"
			storepass="${private.keystore_user_password}" tsaurl="${private.tsaurl}" />
	</target>
	
	<target name="create_manifest_build">
		<manifest file="MANIFEST.MF">
			<attribute name="Class-Path" value="." />
			<attribute name="Main-Class" value="taytom258.Start" />
			<section name="${build.app_name}">
				<attribute name="Version" value="$(build.app_version}" />
				<attribute name="Implementation_Version" value="${build.app_version} ${time.TODAY}" />
			</section>
			<attribute name="Sealed" value="false" />
		</manifest>
	</target>
	
	<target name="create_manifest_release">
			<manifest file="MANIFEST.MF">
				<attribute name="Class-Path" value="." />
				<attribute name="Main-Class" value="taytom258.Start" />
				<section name="${build.app_name}">
					<attribute name="Version" value="$(build.app_version}" />
					<attribute name="Implementation_Version" value="${build.app_version} ${time.TODAY}" />
				</section>
				<attribute name="Sealed" value="true" />
			</manifest>
		</target>
	
	<target name="resolve">
		<ivy:retrieve />
	</target>
	
	<target name="unjar">
		<unzip dest="${environment.base_location}/temp/common">
		    <patternset>
		        <include name="**/*.java"/>
		    </patternset>
		    <fileset dir="${environment.source_location}/antBuild/lib">
		        <include name="**/*.jar"/>
		    </fileset>
		</unzip>
	 </target>
	
	<!-- Build Targets -->
	
	<target name="build">
		<!-- Prep for the build -->
		<antcall target="clean" />
		<antcall target="jenkinsClean"/>
		<antcall target="increment_build_number" />
		<antcall target="prep" />
		<antcall target="create_manifest_build" />
		<antcall target="resolve" />
		<antcall target="unjar" />
		
		<!-- Build the jar -->
		<antcall target="compile" />
		<jar destfile="${environment.build_location}/${build.app_name}-${build.app_version}-${build.build_number}.jar"
			manifest="MANIFEST.MF" index="true">
			<fileset dir="${environment.base_location}/temp/compile" />
		</jar>
		
		
		<!-- Clean up the source now that we are done -->
		<antcall target="clean" />
	</target>
	
	<target name="release">
		<!-- Prep for the build -->
		<antcall target="clean" />
		<antcall target="increment_build_number" />
		<antcall target="prep" />
		<antcall target="replace_tokens" />
		<antcall target="create_manifest_release" />
		<antcall target="resolve" />
		<antcall target="unjar" />

		<!-- Build the jar -->
		<antcall target="compile" />
		<mkdir dir="${environment.release_location}/${build.app_name}/${build.app_version}" />
			<jar destfile="${environment.release_location}/${build.app_name}/${build.app_version}/${build.app_name}-${build.app_version}-${build.build_number}.jar"
				manifest="MANIFEST.MF" index="true">
				<fileset dir="${environment.base_location}/temp/compile" />
			</jar>
		
		<!-- Sign the finished jar -->
		<antcall target="sign_jar" />
		
		<!-- Clean up the source now that we are done -->
		<antcall target="clean" />
	</target>
</project>
		
		
		
		
		